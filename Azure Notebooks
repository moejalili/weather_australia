Collaborating on Azure Notebooks

In the beginning of the course, I mentioned that Microsoft Azure will host the Jupyter Notebook in the cloud and for free. There are also some sharing features included with Azure Notebooks, and in this video I'll explore some of these. Recall that all you need to use Azure Notebooks is a Microsoft account. I'm using an outlook. com email address, which you can also get for free. I'm inside of this Azure Notebook library, and I'm going to click the New button. This dialog, which I showed at the beginning of the course, has three tabs. This first tab is for creating content from scratch, the last tab I can use to clone content from a URL, including on GitHub. So if I copy the URL for the Jupyter Notebook in the previous video and paste it in the dialog, Azure will clone the contents. Now I can open the cloned notebook in Azure. The main difference between GitHub and Azure is that on Azure the notebook is running on a live server, so I can interact with it, whereas on GitHub it was read only. Now before the notebook can actually run, I'll need to add the data file. This was unneeded on GitHub to render the current state of the notebook, although in the real world you would want to include it for completeness. But in Azure, I can either create a new file and copy and paste the data, which is what I will do here, or I can upload the file from my local machine. So I'll go back to the CSV file, copy the contents, and paste it into Azure. Now I can go ahead and run the cells in the notebook. I still get the code, the Markdown, the visualizations, like on GitHub, but I'll also get the custom styles and the widget also works. Now a word of warning about Azure Notebooks. First, because this is running on a public server, be careful of what you post. Second, this is a free service, and thus the servers are shared among users. This means that you could experience lag, especially when doing installs. I've removed any lags for this course through the magic of editing. Sometimes you might get an error about exceeding a quota for computing resources during a long-running cell. In this case, you might be able to split the cell into several other cells, remember the keyboard shortcut Ctrl+Shift+Minus, and then execute the task in parts to avoid exceeding quotas, but overall, this is a very good resource for learning, and just about everything in the course should be possible in Azure Notebooks. And I can share libraries from within Azure Notebooks as well. So by making this library publicly available with the URL, other Azure Notebook users could clone it and make modifications and try them out live as well, and also, this is free. But that's not all. You can export notebooks into many different formats such as PDF. Azure Notebooks come with an integrated terminal, so you could run conda and pip and install packages and extensions, such as ipyleaflet, and you can even set startup scripts for when notebooks are launched. In addition to ipywidgets, there are several powerful extensions installed in Azure Notebooks. One, which is called RISE, will reformat Jupyter Notebooks and show them as a slideshow, another called bqplot lets you create interactive visualizations without having to use low-level APIs. I encourage you to check out these features by exploring the Azure Notebook documentation, and don't forget that these are not specific to Azure Notebook. You can install these extensions locally on Windows, Mac, and Linux. Azure just packages everything for you to get started easily.